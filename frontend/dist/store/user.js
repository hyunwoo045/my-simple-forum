import axios from"axios";import config from"~/key/config";const endpoint=config.endpoint;export default{namespaced:!0,state:()=>({isLoggedIn:!1,id:-1,provider:"forum",nickname:"",identifier:""}),mutations:{setState(e,t){const{id:o,provider:n,identifier:r,displayName:a}=t;e.isLoggedIn=!0,e.provider=n,e.id=o,e.nickname=a,e.identifier=r},resetState(e){e.id=-1,e.nickname="",e.provider="forum",e.isLoggedIn=!1,localStorage.removeItem("accessToken"),localStorage.removeItem("refreshToken")}},actions:{async AccessTokenHandler({commit:e}){try{return e("setState",await verifyAccessToken()),"OK"}catch(e){return e}},async RefreshTokenHandler({commit:e}){try{return e("setState",await verifyRefreshToken()),"OK"}catch(e){return e}}}};function verifyAccessToken(){return new Promise(((e,t)=>{const o=localStorage.getItem("accessToken");o?axios.get(`${endpoint}/auth/check?token=${o}`).then((o=>{const n=o.data;"VALID_TOKEN"===n.message?(localStorage.setItem("accessToken",n.accessToken),localStorage.setItem("refreshToken",n.refreshToken),e(n.payload)):t("NOT_VALID_ACCESS_TOKEN")})):t("NEED_LOGIN")}))}function verifyRefreshToken(){return new Promise(((e,t)=>{const o=localStorage.getItem("refreshToken");o?axios.get(`${endpoint}/auth/check_refresh?token=${o}`).then((o=>{const n=o.data;"VALID_REFRESH_TOKEN"===n.message?(localStorage.setItem("accessToken",n.accessToken),localStorage.setItem("refreshToken",n.refreshToken),e(n.payload)):t("NOT_VALID_REFRESH_TOKEN")})):t("NEED_LOGIN")}))}